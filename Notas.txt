NOTAS MOKEPON.html:

    // IDEAAAAAAA: BARRA DE PROGRESO DE NIVEL
    //IDEAAAAA: Cuando mueva el mouse sobre el nombre de algun mokepon que mueshe atributos

    //Maquetacion = definir estructura de una pagina web y su contenido
    //botones con <button>
        // se le puede poner un atributo id para "referirse a ese boton"
    // Dividir pagina por secciones con <section>
    // Para hacer que ciertas partes sean dinamicas (osea que cambie <como las vidas>) entonces se les agrega <span>"palabra"
    //<h2> es un subtitulo
    //<h1> solo se puede utilizar una vez
    // <input/> etiqueta que solo abre = Cuadro de texto y hay varios tipos de input
        //+ type="tipo de input" = maqueta de como cambiar el tipo de input
            //text = texto
            //number = numeros
            //time = tiempo
            //date = calendario
            //checkbox = cajita de chulito
            //radio = circulito chuleable pero no se puede quitar :D
                // para que solo se seleccione uno entre varios inputs = radio es encapsularlos en un nuevo atributo llamado name ="nombre del grupo al que pertenecen"
    //<label> = se pone al mismo nivel que input y se pone para que los jugadores sepan que estan seleccionando de tal <input>
        //Label tiene un atributo que es para vincularlo con un input = for="id del input" para que si se da click en el label tambien se haga en el input
        
        //        Hipodoge -> AguaðŸ’§
        //    Capipepo -> TierraðŸŒ±
        //    Ratigueya -> FuegoðŸ”¥
        //    Langostelvis -> AguaðŸ’§ y FuegoðŸ”¥
        //    Tucapalma -> AguaðŸ’§ y TierraðŸŒ±
        //    Pydos -> TierraðŸŒ± y FuegoðŸ”¥

NOTAS CODIGO.js:

// Se separan los nombres de las variables no con espacio sino se diferencia por MAYUSCULA
//document = representa el documento.html y tiene varios metodos y propiedades como el .checked que es verificar si una opcion esta seleccionada en tal id si es verdadera o no se le puede agregar un == para que cuando sea true o false haga tal cosa
//o
//window = cuando haga algo la pagina que se ejecute cierta funcion ej: window.addEventListener('load',tal funcion) aqui nos dice que cuando la pagina cargue entonces que pase tal funcion
    //.getElementById('nombre del id') = asigna un id a una variable u obtener un valor de cierta id
// ' teclado al lado del 0
//Las variables tambien tienen sus propios metodos:
    //.addEventListener('evento que queremos escuchar','funcion que queremos ejecutar') = que cuando la variable escuche eso que haga esto o tambien se puede sin una funncion con , () =>{la accion que queremos realizar}
//Separar variables con ,
//.innerHTML = nos permite manipular cierto snap con cierto id de nuestro DOM
    // DOM = (Document Object Model) es la forma en la que se estructura el html para que se pueda manipular por medio de javascript

//Es mejor hacer una variable u otra funcion con un la accion que se quiere realizar en la condicional ej:document.getElementById
//Document.createElement('elemento de html que se quiere crear') = se puede crear contenido desde javascript a html se le agrega info con .innerHtml
//(lugardondesequiereelelemento (generalmente un id)).appendChild(elementoquesecoge) = Coge un elemento de html que hayamos creado y lo inserta en otro elemento del html que queramos insertar

//Se puede buscar la documentacion de un metodo llendo a google y buscando el comando por su nombre y ya
//location.reload = recargar la pagina

// cosa-- = restarle uno
//variableConBoton.disabled = true = deshabilitar el boton que hace referencia la variable

//Hay propiedades style que es: variable.style.(el estilo que se prefiera) <== sin parentesis
    //.display = establece los tipos de visualizacion interna y externa de un elemento 

//VARIABLES: NOTA//
    //Se le dice variables globales a las variables que se crean afuera de un bloque de codigo ya que estas se pueden utilizar en distintos lugares de nuestro codigo posteriormente
    // y no es una variable de entorno si se crea dentro de por ejemplo una funcion porque solo existira esa variable dentro de esa funcion
    //En las funciones se puede referenciar a ellas pero se utilizan para cambiar su valor y utilizar el nuevo valor referenciado para darle un nuevo valor a la funcion
    //Se pueden ver los valores de las variables en la consola

